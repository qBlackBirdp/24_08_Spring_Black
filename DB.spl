-- 데이터베이스 초기화
DROP DATABASE IF EXISTS `24_08_Spring_Black`;
CREATE DATABASE `24_08_Spring_Black`;
USE `24_08_Spring_Black`;

-- samples 테이블 생성
CREATE TABLE `samples`
(
    `id`          BIGINT       NOT NULL AUTO_INCREMENT,
    `u_id`        int(10)      NOT NULL,
    `istm_id`     int(10)      NOT NULL,
    `reg_date`    DATETIME(6)  NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `s_name`      varchar(100) NOT NULL,
    `bpm`         int(10)      NULL,     -- BPM 필드는 NULL 가능하게 변경
    `genres`      varchar(100) NOT NULL,
#                             `price` int NULL DEFAULT 0,
    `key`         CHAR(10) NULL COMMENT '12 Key + 3 (A, B, F# 따위 값은 정해져 있음.)',
    `is_one_shot` TINYINT(1)   NOT NULL DEFAULT 0 COMMENT 'one-shot 여부 (0=아님, 1=one-shot)',
    `url`         VARCHAR(255) NOT NULL, -- URL 필드 추가 (Firebase Storage 링크 저장)
    `del_status`  TINYINT(1)   NOT NULL DEFAULT 0 COMMENT '삭제 여부 (0=삭제 전, 1=삭제 후)',
    `del_date`    DATETIME(6)  NULL COMMENT '삭제 날짜',
    `field`       VARCHAR(255) NULL,
    PRIMARY KEY (`id`)
);

CREATE INDEX `IDX_samples_u_id` ON `samples` (`u_id`);
CREATE INDEX `IDX_samples_istm_id` ON `samples` (`istm_id`);

-- users 테이블 생성
CREATE TABLE `users`
(
    `id`               int(10)      NOT NULL AUTO_INCREMENT,
    `reg_date`         DATETIME(6)  NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `update_date`      DATETIME(6)  NULL     DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '계정 정보 마지막 업데이트 일시',
    `login_id`         varchar(50)  NOT NULL COMMENT '자동 생성된 로그인 ID, user-123456 형식',
    `login_pw`         varchar(100) NULL,
    `u_name`           varchar(20)  NOT NULL,
    `nickname`         varchar(20)  NOT NULL,
    `email`            varchar(50)  NOT NULL UNIQUE COMMENT '로그인에 사용될 이메일 주소',
    `del_status`       TINYINT(1)   NOT NULL DEFAULT 0 COMMENT '탈퇴 여부 (0=탈퇴 전, 1=탈퇴 후)',
    `del_date`         DATETIME(6)  NULL COMMENT '탈퇴 날짜',
    `sell_level`       SMALLINT(2)  NOT NULL DEFAULT 3 COMMENT '판매권한 (없음=3, 있음=5)',
    `auth_level`       SMALLINT(2)  NOT NULL DEFAULT 3 COMMENT '권한 레벨 (없음=3, 있음 = 7)',
    `spotify_login_id` VARCHAR(100) NULL     DEFAULT NULL COMMENT 'Spotify 소셜 로그인 ID',
    `google_login_id`  VARCHAR(100) NULL     DEFAULT NULL COMMENT 'Google 소셜 로그인 ID',
    PRIMARY KEY (`id`)
);
ALTER TABLE users
    ADD CONSTRAINT unique_google_login_id UNIQUE (`google_login_id`);
ALTER TABLE users
    ADD CONSTRAINT unique_spotify_login_id UNIQUE (`spotify_login_id`);
# ALTER TABLE `users`
#     MODIFY COLUMN `login_pw` varchar(100) NULL;

-- instruments 테이블 생성
CREATE TABLE `instruments`
(
    `id`        int(10)     NOT NULL AUTO_INCREMENT,
    `istm_name` VARCHAR(50) NOT NULL COMMENT '악기 이름: Drums, Vocals, Synth, Keys 등',
    `istm_type` VARCHAR(50) NOT NULL COMMENT '악기 타입: 드럼의 세부 유형 (Snare, Kick 등)',
    PRIMARY KEY (`id`)
);

-- instruments_items 테이블 생성
CREATE TABLE `instruments_items`
(
    `id`            int(10)     NOT NULL AUTO_INCREMENT,
    `items_id` int(10)     NOT NULL, -- instruments 테이블의 외래 키
    `items_name`    VARCHAR(50) NOT NULL COMMENT '세부 항목: 예를 들어 Snare, Kick 등',
    PRIMARY KEY (`id`),
    FOREIGN KEY (`items_id`) REFERENCES `instruments` (`id`) ON DELETE CASCADE
);

-- coin 테이블 생성
# CREATE TABLE `coin` (
#                         `id` int(10) NOT NULL,
#                         `u_id` int(10) NOT NULL,
#                         `balance` int NOT NULL,
#                         `update_date` DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
#                         PRIMARY KEY (`id`, `u_id`)
# );
#
# -- coin_transactions 테이블 생성
# CREATE TABLE `coin_transactions` (
#                                      `tran_id` int(10) NOT NULL,
#                                      `id2` int(10) NOT NULL,
#                                      `tran_type` char(20) NOT NULL COMMENT 'spend coin, get coin, adjust',
#                                      `tran_date` DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
#                                      `amount` int NOT NULL,
#                                      PRIMARY KEY (`tran_id`, `id2`)
# );

-- 외래 키 제약 조건 추가
ALTER TABLE `samples`
    ADD CONSTRAINT `FK_users_TO_samples_1` FOREIGN KEY (`u_id`) REFERENCES `users` (`id`);
ALTER TABLE `samples`
    ADD CONSTRAINT `FK_instruments_TO_samples_1` FOREIGN KEY (`istm_id`) REFERENCES `instruments` (`id`);
# ALTER TABLE `coin` ADD CONSTRAINT `FK_users_TO_coin_1` FOREIGN KEY (`u_id`) REFERENCES `users` (`id`);
# ALTER TABLE `coin_transactions` ADD CONSTRAINT `FK_users_TO_coin_transactions_1` FOREIGN KEY (`id2`) REFERENCES `users` (`id`);


-- 테스트 데이터 삽입
# INSERT INTO users (reg_date, update_date, login_id, login_pw, u_name, nickname, email, del_status, sell_level, auth_level, spotify_login_id, google_login_id)
# VALUES
#     (NOW(), NOW(), 'user-1a2b3c4d', 'password1', 'John Doe', 'johnny', 'john@example.com', 0, 3, 3, NULL, null),
#     (NOW(), NOW(), 'user-5f6g7h8i', 'password2', 'Jane Smith', 'janey', 'jane@example.com', 0, 3, 3, NULL, null),
#     (NOW(), NOW(), 'user-9j0k1l2m', 'password3', 'Jim Brown', 'jimbo', 'jim@example.com', 0, 3, 3, NULL, null);
-- 샘플 데이터 삽입
-- instruments 테이블에 데이터 삽입
INSERT INTO `instruments` (`istm_name`, `istm_type`)
VALUES ('Drums', 'Snare'),
       ('Drums', 'Kick'),
       ('Drums', 'Hi-Hat'),
       ('Vocals', 'Female Vocal'),
       ('Vocals', 'Male Vocal'),
       ('Synth', 'Pads'),
       ('Synth', 'Bass'),
       ('Keys', 'Piano'),
       ('Keys', 'Organ'),
       ('Guitar', 'Electric');

-- instruments_items 테이블에 데이터 삽입
INSERT INTO `instruments_items` (`items_id`, `items_name`)
VALUES ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Drums' AND `istm_type` = 'Snare'), 'Snare'),
       ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Drums' AND `istm_type` = 'Kick'), 'Kick'),
       ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Drums' AND `istm_type` = 'Hi-Hat'), 'Hi-Hat'),
       ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Vocals' AND `istm_type` = 'Female Vocal'), 'Female Vocal'),
       ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Vocals' AND `istm_type` = 'Male Vocal'),
        'Harmony Vocal'),
       ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Synth' AND `istm_type` = 'Bass'), 'Bass'),
       ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Synth' AND `istm_type` = 'Pads'), 'Pads'),
       ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Keys' AND `istm_type` = 'Piano'), 'Piano'),
       ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Keys' AND `istm_type` = 'Organ'), 'Organ'),
       ((SELECT `id` FROM `instruments` WHERE `istm_name` = 'Guitar' AND `istm_type` = 'Electric'),
        'Electric');

-- samples 테이블에 데이터 삽입
INSERT INTO `samples` (`u_id`, `istm_id`, `s_name`, `bpm`, `genres`, `is_one_shot`, `url`, `del_status`, `field`)
VALUES (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Drums' AND `istm_type` = 'Snare'), 'Sample #1', 120,
        'Genre #1', 1, 'https://dummyurl.com/sample1', 0, 'Field #1'),
       (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Drums' AND `istm_type` = 'Kick'), 'Sample #2', 130,
        'Genre #2', 0, 'https://dummyurl.com/sample2', 0, 'Field #2'),
       (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Drums' AND `istm_type` = 'Hi-Hat'), 'Sample #3', 90,
        'Genre #3', 1, 'https://dummyurl.com/sample3', 0, 'Field #3'),
       (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Vocals' AND `istm_type` = 'Female Vocal'), 'Sample #4',
        140, 'Genre #4', 0, 'https://dummyurl.com/sample4', 0, 'Field #4'),
       (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Vocals' AND `istm_type` = 'Male Vocal'),
        'Sample #5', 110, 'Genre #5', 1, 'https://dummyurl.com/sample5', 0, 'Field #5'),
       (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Synth' AND `istm_type` = 'Pads'), 'Sample #6', 160,
        'Genre #6', 0, 'https://dummyurl.com/sample6', 0, 'Field #6'),
       (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Synth' AND `istm_type` = 'Bass'), 'Sample #7',
        100, 'Genre #7', 1, 'https://dummyurl.com/sample7', 0, 'Field #7'),
       (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Keys' AND `istm_type` = 'Piano'), 'Sample #8', 115,
        'Genre #8', 0, 'https://dummyurl.com/sample8', 0, 'Field #8'),
       (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Keys' AND `istm_type` = 'Organ'), 'Sample #9', 125,
        'Genre #9', 1, 'https://dummyurl.com/sample9', 0, 'Field #9'),
       (1, (SELECT `id` FROM `instruments` WHERE `istm_name` = 'Guitar' AND `istm_type` = 'Electric'),
        'Sample #10', 135, 'Genre #10', 0, 'https://dummyurl.com/sample10', 0, 'Field #10');


-- 데이터 조회
SELECT *
FROM users;
